<?xml version="1.0"?>
<!--
  ASP.NET アプリケーションを構成する方法の詳細については、
  http://go.microsoft.com/fwlink/?LinkId=169433 を参照してください
  -->
<configuration>
  <appSettings>
    <!-- ログの有効期間 -->
    <add key="ExpireLogDays" value="31"/>

    <!-- ログファイルを開いておく時間 -->
    <add key="KeepLogOpenTime" value="00:01:00"/>

    <!-- トレースリスナへの定期通知のベース間隔 -->
    <add key="TickRollingSpan" value="00:00:10"/>
  </appSettings>

  <!--
    web.config の変更点の説明については、http://go.microsoft.com/fwlink/?LinkId=235367 を参照してください。

    次の属性を <httpRuntime> タグに設定できます。
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <!-- コンパイラモード -->
    <compilation debug="true" targetFramework="4.5"/>
    
    <!-- XSS対策を自分で行うため -->
    <httpRuntime requestValidationMode="2.0"/>
    
    <!-- カスタムエラーページ -->
    <customErrors mode="On" defaultRedirect="err/Default.htm">
      <error statusCode="500" redirect="err/err500.html"/>
    </customErrors>

    <!--
      [How To: ASP.NET 2.0 で MachineKey を構成する方法]
      http://msdn.microsoft.com/ja-jp/library/ms998288.aspx

      [ExpressWeb でASP.NET アプリのインストールに注意！]
      http://awoni.net/wp/archives/592

      [ExpressWebのアプリケーションはmachineKey設定がおすすめ]
      http://dotnettechie.com/blog/expressweb-require-machinekey


      生成ツール:

      [insite :: ASP.NET <machineKey> Generator] (HMACSHA256のvalidationに対応)
      http://www.insitesystems.com/services/machine-key-generator.html

      [ASP.NET RESOURCES :: <machineKey> Generator]
      http://aspnetresources.com/tools/machineKey
    -->
    <machineKey validationKey="1A663AD89958556F5526A0BA9AA1C0D3248136CD5FFCE8C748AD91BD1BDBA4DC856C7B443EE75A377F0436FC7113FBAC6796DC2F6E0CD426F56D7F0F919B4E85" decryptionKey="61022697E1AC9FD293D4FE1AEE57D9716043A4951B1F3197" validation="HMACSHA256" decryption="AES"/>

    <pages viewStateEncryptionMode="Never" controlRenderingCompatibilityVersion="4.0"/>
    
    <!--
     トレース結果を収集、保存、および表示する方法を制御する
     ASP.NET コード トレース サービスを構成します.
    -->
    <trace enabled="true" traceMode="SortByTime" pageOutput="false" requestLimit="40" mostRecent="true" localOnly="false" writeToDiagnosticsTrace="false"/>

    <authentication mode="Forms">
      <!-- フォーム認証を行うが、認証の実装は独自なので以下の子細かな設定は使用されない -->
      <!-- ExpressWebではSSLが使えないのでパスワードをJavaScriptでハッシュ化して送信している -->
      <forms name=".ASPXAUTH" loginUrl="Login/Login.aspx"
             defaultUrl="default.aspx"
             protection="All"
             timeout="10"
             path="/"
             requireSSL="false"
             slidingExpiration="true"
             cookieless="UseDeviceProfile"
             domain=""
             enableCrossAppRedirects="false">
        <credentials passwordFormat="SHA1"/>
      </forms>
      <passport redirectUrl="internal"/>
    </authentication>

    <membership defaultProvider="DefaultMembershipProvider">
      <providers>
        <!-- メンバーシッププロバイダは、パスワードはハッシュ化しない。
          フォーマットとして、Clear:0、Encrypted:2のいずれかを使用できる -->
        <add name="DefaultMembershipProvider"
             type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
             connectionStringName="DefaultConnection"
             passwordFormat="Encrypted"
             enablePasswordRetrieval="true"
             enablePasswordReset="true"
             requiresQuestionAndAnswer="false"
             requiresUniqueEmail="false"
             maxInvalidPasswordAttempts="5"
             minRequiredPasswordLength="6"
             minRequiredNonalphanumericCharacters="0"
             passwordAttemptWindow="10"
             applicationName="/"/>
      </providers>
    </membership>

    <roleManager defaultProvider="DefaultRoleProvider"
                 enabled="true"
                 cacheRolesInCookie="true">
      <providers>
        <add name="DefaultRoleProvider"
             type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
             connectionStringName="DefaultConnection"
             applicationName="/" />
      </providers>
    </roleManager>

    <!--
    <profile defaultProvider="DefaultProfileProvider">
      <providers>
        <add name="DefaultProfileProvider"
             type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
             connectionStringName="DefaultConnection"
             applicationName="/" />
      </providers>
    </profile>

    
    <sessionState mode="InProc"
                  customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" 
             type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
             connectionStringName="DefaultConnection"
             applicationName="/" />
      </providers>
    </sessionState>
  -->
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
  -->
    <siteMap defaultProvider="XmlSiteMapProvider" enabled="true">
      <providers>
        <add name="XmlSiteMapProvider"
          type="System.Web.XmlSiteMapProvider"
          securityTrimmingEnabled="true"
          siteMapFile="Web.sitemap" />
      </providers>
    </siteMap>
    
  </system.web>

  <system.diagnostics>
    <sources>
      <source name="AppLog" switchName="AppLogSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="FileLogAppender"/>
        </listeners>
      </source>
    </sources>
    <switches>
      <!--
        ログスイッチ: ログレベルの設定
        Off/Critical/Error/Warning/Information/Verbose/ActivityTracing
      -->
      <add name="AppLogSwitch" value="Verbose,ActivityTracing"/>
    </switches>
    <sharedListeners>
      <add name="FileLogAppender" type="WebToolboxApp.Modules.FileLogger,WebToolboxApp" initializeData="~/App_Data/Logs/WEB_APP.log"/>
    </sharedListeners>
    <trace autoflush="true">
      <listeners>
        <add name="WebPageTraceListener" type="System.Web.WebPageTraceListener, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
        <add name="FileLogAppender"/>
      </listeners>
    </trace>
  </system.diagnostics>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!-- プログラム中のステータスコード返却によるエラーページ遷移 -->
    <httpErrors errorMode="Custom" existingResponse="Replace">
      <remove statusCode="401"/>
      <remove statusCode="404"/>
      <error statusCode="401" prefixLanguageFilePath="" path="/err/err401.html" responseMode="ExecuteURL"/>
      <error statusCode="404" prefixLanguageFilePath="" path="/err/err404.html" responseMode="ExecuteURL"/>
    </httpErrors>
  </system.webServer>

  <!-- SQL Server Compact Edition 4.0 サポート -->
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0"/>
      <add invariant="System.Data.SqlServerCe.4.0" name="Microsoft® SQL Server® Compact 4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"/>
    </DbProviderFactories>
  </system.data>
  
  <connectionStrings>
    <!-- SQL Server Compact Edition 4.0 のデータベース -->
    <add name="DefaultConnection" connectionString="Data Source=|DataDirectory|\aspnet.sdf" providerName="System.Data.SqlServerCe.4.0"/>
  </connectionStrings>

</configuration>